// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/moiot/gravity/sql_execution_engine (interfaces: SQlExecutionEngine)

// Package mock_sql_execution_engine is a generated GoMock package.
package mock_sql_execution_engine

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	core "github.com/moiot/gravity/pkg/core"
	schema_store "github.com/moiot/gravity/schema_store"
)

// MockSQlExecutionEngine is a mock of SQlExecutionEngine interface
type MockSQlExecutionEngine struct {
	ctrl     *gomock.Controller
	recorder *MockSQlExecutionEngineMockRecorder
}

// MockSQlExecutionEngineMockRecorder is the mock recorder for MockSQlExecutionEngine
type MockSQlExecutionEngineMockRecorder struct {
	mock *MockSQlExecutionEngine
}

// NewMockSQlExecutionEngine creates a new mock instance
func NewMockSQlExecutionEngine(ctrl *gomock.Controller) *MockSQlExecutionEngine {
	mock := &MockSQlExecutionEngine{ctrl: ctrl}
	mock.recorder = &MockSQlExecutionEngineMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSQlExecutionEngine) EXPECT() *MockSQlExecutionEngineMockRecorder {
	return m.recorder
}

// Execute mocks base method
func (m *MockSQlExecutionEngine) Execute(arg0 []*core.Msg, arg1 *schema_store.Table) error {
	ret := m.ctrl.Call(m, "Execute", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute
func (mr *MockSQlExecutionEngineMockRecorder) Execute(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockSQlExecutionEngine)(nil).Execute), arg0, arg1)
}

// Init mocks base method
func (m *MockSQlExecutionEngine) Init(arg0 int) error {
	ret := m.ctrl.Call(m, "Init", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init
func (mr *MockSQlExecutionEngineMockRecorder) Init(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockSQlExecutionEngine)(nil).Init), arg0)
}
